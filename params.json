{"name":"Morse Tool","tagline":"An Open-Source program for transforming Morse codes to other forms like Binary bit streams and ASCII Texts","body":"## Introduction to (ancient) Morse Code\r\n***\r\n\r\n<img align=\"right\" src=\"https://github.com/AKD92/Morse-Code-Conversion-Library/raw/master/International_Morse_Code_Small.png\")>\r\n**Morse code** is a method of transmitting text information as a series of on-off tones, lights, or clicks that can be directly understood by a skilled listener or observer without special equipment. This coding method was invented by American inventor **Samuel Finley Breese Morse** in 1836. Each Morse code symbol represents either a text character (letter or numeral) or a prosign and is represented by a unique sequence of dots and dashes.\r\n\r\nCompared to voice, Morse code is less sensitive to poor signal conditions, yet still comprehensible to humans without a decoding device. Morse is therefore a useful alternative to synthesized speech for sending automated data to skilled listeners on voice channels. In an emergency, Morse code can be sent by improvised methods that can be easily \"keyed\" on and off, making it one of the simplest and most versatile methods of telecommunication. The most common distress signal is **SOS** or three dots, three dashes and three dots, internationally recognized by treaty. Read more on [Wikipedia](https://en.wikipedia.org/wiki/Morse_code).\r\n\r\n****\r\n\r\n## Introduction to (digital) Morse Tool\r\n\r\nThis is basically a conversion tool. It uses the library [libmorse.a](https://github.com/AKD92/Morse-Code-Conversion-Library) for all kinds of conversion and it is very convenient and easy to use. It is particularly useful if you wish to change your ASCII text to Morse code representation, Binary representation etc, and the reverse operations are also supported.\r\n\r\nFor example, ASCII Text **\"SOS\"** might be converted to its equivalent Morse Code **\"... --- ...\"** (DOT DOT DOT DASH DASH DASH DOT DOT DOT).\r\n\r\n***\r\n\r\n![Main Window](https://github.com/AKD92/Morse-Tool-GUI-Application/raw/master/scrn_1.png) ![](https://github.com/AKD92/Morse-Tool-GUI-Application/raw/master/scrn_2.png)\r\n\r\n***\r\n\r\nThe aim of this open-source project is to design and offer a graphical frontend for my Morse Code Library [libmorse.a](https://github.com/AKD92/Morse-Code-Conversion-Library). The output of this project will be a stand-alone desktop application which can be used for conversion of morse code to other forms and vice versa.\r\n\r\n## Implemented Features:\r\n* ASCII Text to Morse code conversion\r\n* Morse Code to ASCII text conversion\r\n* Morse Code to Binary conversion\r\n* Binary to Morse Code conversion\r\n\r\nDownload this application by clicking \"Download ZIP\" link shown above, or build it from the source. For building from source, consult with the makefile included to the GitHub repository.\r\n\r\n***\r\n\r\n## Project Background\r\nI should not forget to mention that, this project is a byproduct of another project of mine, namely **\"Secret message tranmitter and receiver via Morse Code\"** as a part of the university course **Digital System Design (DSD)**. On that project, we were a group of 4 team members to develop a microcontroller-based solution by which Morse code can be sent from one place to another wirelessly, and at the receiver end the actual ASCII text of the message received from sender's machine could be seen.\r\n\r\nWireless transmission of morse signals, Input of morse code and conversion of Morse code to Binary and ASCII Text all were done by the microcontroller we've used. I had to program that microcontroller (an **Arduino**) for implementing morse conversion routines, and here, this project is a slightly modified version of that original work in order to bring broader range of capabilities, convenience and performance.\r\n\r\n***\r\n\r\n## Code dependencies\r\n* [libmorse.a](https://github.com/AKD92/Morse-Code-Conversion-Library) : A collection of algorithms and utility functions for transforming Morse code to other forms and vice versa.\r\n* [libbst.a](https://github.com/AKD92/Dictionary-ADT-by-BST) : General purpose Dictionary data structure, implemented using Binary Search Tree (BST).\r\n* [libstackqueue.a](https://github.com/AKD92/Stack-and-Queue-ADT) : General purpose Stack and Queue data structures.\r\n* [liblinkedlist.a](https://github.com/AKD92/Linked-List-ADT) : General purpose Linked List data structure, including both singly and doubly versions.\r\n\r\nGraphical User Interface was built using [IUP](http://webserver2.tecgraf.puc-rio.br/iup/) Interface library, which is a multiplatform and portable user interface toolkit, freely available.\r\n\r\n***\r\n\r\n## Compilation\r\nThis application is compiled using GCC 4.8.2 32 bit (MinGW).\r\n\r\n## I need your HELP!\r\nPlease let me know if you find any **BUG** at my email akd.bracu@gmail.com\r\n\r\nIf you have any suggestion regarding this project, feel free to share with me.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}